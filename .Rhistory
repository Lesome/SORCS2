#Generate PLINK map file by copying and renaming "SORCS2.adsp.map"
map <- read.table("SORCS2.adsp.map", header = F)
write.table(map, out1, sep='\t',quote=FALSE,row.names=F,col.names=F)
#Use dplyr bind_rows to generate combined fam, cov, and lgen files
fam.ydb <- read.table("SORCS2.Ydb.fam", header=F, stringsAsFactors = FALSE)
colnames(fam.ydb) <- c("FID","IID","PID","MID","SEX","AFF")
fam.ydb <- fam.ydb %>% mutate(IID=as.character(IID))
str(fam.ydb)
fam.adsp <- read.table("SORCS2.adsp.fam", header=F, stringsAsFactors = FALSE)
colnames(fam.adsp) <- c("FID","IID","PID","MID","SEX","AFF")
str(fam.adsp)
fam.comb <- bind_rows(fam.ydb,fam.adsp)
str(fam.comb)
write.table(fam.comb, out2, sep='\t',quote=FALSE,row.names=F,col.names=F)
cov.ydb <- read.table("SORCS2.Ydb_cov.txt", header=T, stringsAsFactors = FALSE)
#colnames(cov.ydb) <- c("FID","IID","PID","MID","SEX","AFF")
cov.ydb <- cov.ydb %>% mutate(IID=as.character(IID))
str(cov.ydb)
cov.adsp <- read.table("SORCS2.adsp_cov.txt", header=T, stringsAsFactors = FALSE)
#colnames(cov.adsp) <- c("FID","IID","PID","MID","SEX","AFF")
str(cov.adsp)
cov.comb <- bind_rows(cov.ydb,cov.adsp)
str(cov.comb)
x <- cov.comb %>% group_by(JS,RS,AUT,NCRAD,NW,ADSP) %>% summarise(n())
print(x)
cov.comb[is.na(cov.comb)]<-0
x <- cov.comb %>% group_by(JS,RS,AUT,NCRAD,NW,ADSP) %>% summarise(n())
print(x)
write.table(cov.comb, out3, sep='\t',quote=FALSE,row.names=F,col.names=F)
lgen.ydb <- read.table("SORCS2.Ydb.lgen", header=F, stringsAsFactors = FALSE)
colnames(lgen.ydb) <- c("FID","IID","rs","A1","A2")
lgen.ydb <- lgen.ydb %>% mutate(IID=as.character(IID))
str(lgen.ydb)
lgen.adsp <- read.table("SORCS2.adsp.lgen", header=F, stringsAsFactors = FALSE)
colnames(lgen.adsp) <- c("FID","IID","rs","A1","A2")
str(lgen.adsp)
lgen.comb <- bind_rows(lgen.ydb,lgen.adsp)
str(lgen.comb)
write.table(lgen.comb, out4, sep='\t',quote=FALSE,row.names=F,col.names=F)
library(data.table)
suppressWarnings(suppressMessages(library(dplyr)))
#Create output files
output <- "SORCS2.comb"
out1 <- paste(output,sep="",".map")
out2 <- paste(output,sep="",".fam")
out3 <- paste(output,sep="","_cov.txt")
out4 <- paste(output,sep="",".lgen")
out5 <- paste(output,sep="",".plink.csv")
#Generate PLINK map file by copying and renaming "SORCS2.adsp.map"
map <- read.table("SORCS2.adsp.map", header = F)
write.table(map, out1, sep='\t',quote=FALSE,row.names=F,col.names=F)
#Use dplyr bind_rows to generate combined fam, cov, and lgen files
fam.ydb <- read.table("SORCS2.Ydb.fam", header=F, stringsAsFactors = FALSE)
colnames(fam.ydb) <- c("FID","IID","PID","MID","SEX","AFF")
fam.ydb <- fam.ydb %>% mutate(IID=as.character(IID))
str(fam.ydb)
fam.adsp <- read.table("SORCS2.adsp.fam", header=F, stringsAsFactors = FALSE)
colnames(fam.adsp) <- c("FID","IID","PID","MID","SEX","AFF")
str(fam.adsp)
fam.comb <- bind_rows(fam.ydb,fam.adsp)
str(fam.comb)
write.table(fam.comb, out2, sep='\t',quote=FALSE,row.names=F,col.names=F)
cov.ydb <- read.table("SORCS2.Ydb_cov.txt", header=T, stringsAsFactors = FALSE)
#colnames(cov.ydb) <- c("FID","IID","PID","MID","SEX","AFF")
cov.ydb <- cov.ydb %>% mutate(IID=as.character(IID))
str(cov.ydb)
cov.adsp <- read.table("SORCS2.adsp_cov.txt", header=T, stringsAsFactors = FALSE)
#colnames(cov.adsp) <- c("FID","IID","PID","MID","SEX","AFF")
str(cov.adsp)
cov.comb <- bind_rows(cov.ydb,cov.adsp)
str(cov.comb)
x <- cov.comb %>% group_by(JS,RS,AUT,NCRAD,NW,ADSP) %>% summarise(n())
print(x)
cov.comb[is.na(cov.comb)]<-0
x <- cov.comb %>% group_by(JS,RS,AUT,NCRAD,NW,ADSP) %>% summarise(n())
print(x)
write.table(cov.comb, out3, sep='\t',quote=FALSE,row.names=F,col.names=F)
lgen.ydb <- read.table("SORCS2.Ydb.lgen", header=F, stringsAsFactors = FALSE)
colnames(lgen.ydb) <- c("FID","IID","rs","A1","A2")
lgen.ydb <- lgen.ydb %>% mutate(IID=as.character(IID))
str(lgen.ydb)
lgen.adsp <- read.table("SORCS2.adsp.lgen", header=F, stringsAsFactors = FALSE)
colnames(lgen.adsp) <- c("FID","IID","rs","A1","A2")
str(lgen.adsp)
lgen.comb <- bind_rows(lgen.ydb,lgen.adsp)
str(lgen.comb)
write.table(lgen.comb, out4, sep='\t',quote=FALSE,row.names=F,col.names=F)
assoc <- paste("plink",sep=" ","--lfile", output, "--assoc", "--ci 0.95", "--out", output)
logistic <- paste("plink",sep=" ","--lfile", output, "--logistic", "--covar", out3, "--covar-name RS,AUT,NCRAD,NW,SEX,Age,APOE4dose,APOE2dose", "--ci 0.95", "--out", output)
haplog <- paste("plink",sep=" ","--lfile", output, "--hap-window 4 --hap-logistic", "--covar", out3, "--covar-name RS,AUT,NCRAD,NW,ADSP,SEX,Age,APOE4dose,APOE2dose", "--ci 0.95", "--mhf 0.005 --out", output)
assocfile <- paste(output,sep="",".assoc")
logisfile <- paste(output,sep="",".assoc.logistic")
haplogfile <- paste(output,sep="",".assoc.hap.logistic")
system(assoc)
system(logistic)
system(haplog)
f1 <- read.table(assocfile, header=T)
#print(f1)
f1 <- f1 %>% select(CHR,SNP,BP,F_A, F_U, OR, P) %>% rename(FREQ_AD=F_A, FREQ_CON=F_U, OR_assoc=OR, P_assoc=P)
print(f1,digits=2,row.names=F)
print("", quote=F)
library(data.table)
suppressWarnings(suppressMessages(library(dplyr)))
#Create output files
output <- "SORCS2.comb"
out1 <- paste(output,sep="",".map")
out2 <- paste(output,sep="",".fam")
out3 <- paste(output,sep="","_cov.txt")
out4 <- paste(output,sep="",".lgen")
out5 <- paste(output,sep="",".plink.csv")
#Generate PLINK map file by copying and renaming "SORCS2.adsp.map"
map <- read.table("SORCS2.adsp.map", header = F)
write.table(map, out1, sep='\t',quote=FALSE,row.names=F,col.names=F)
#Use dplyr bind_rows to generate combined fam, cov, and lgen files
fam.ydb <- read.table("SORCS2.Ydb.fam", header=F, stringsAsFactors = FALSE)
colnames(fam.ydb) <- c("FID","IID","PID","MID","SEX","AFF")
fam.ydb <- fam.ydb %>% mutate(IID=as.character(IID))
str(fam.ydb)
fam.adsp <- read.table("SORCS2.adsp.fam", header=F, stringsAsFactors = FALSE)
colnames(fam.adsp) <- c("FID","IID","PID","MID","SEX","AFF")
str(fam.adsp)
fam.comb <- bind_rows(fam.ydb,fam.adsp)
str(fam.comb)
write.table(fam.comb, out2, sep='\t',quote=FALSE,row.names=F,col.names=F)
cov.ydb <- read.table("SORCS2.Ydb_cov.txt", header=T, stringsAsFactors = FALSE)
#colnames(cov.ydb) <- c("FID","IID","PID","MID","SEX","AFF")
cov.ydb <- cov.ydb %>% mutate(IID=as.character(IID))
str(cov.ydb)
cov.adsp <- read.table("SORCS2.adsp_cov.txt", header=T, stringsAsFactors = FALSE)
#colnames(cov.adsp) <- c("FID","IID","PID","MID","SEX","AFF")
str(cov.adsp)
cov.comb <- bind_rows(cov.ydb,cov.adsp)
str(cov.comb)
x <- cov.comb %>% group_by(JS,RS,AUT,NCRAD,NW,ADSP) %>% summarise(n())
print(x)
cov.comb[is.na(cov.comb)]<-0
x <- cov.comb %>% group_by(JS,RS,AUT,NCRAD,NW,ADSP) %>% summarise(n())
print(x)
write.table(cov.comb, out3, sep='\t',quote=FALSE,row.names=F,col.names=F)
library(data.table)
suppressWarnings(suppressMessages(library(dplyr)))
#Create output files
output <- "SORCS2.comb"
out1 <- paste(output,sep="",".map")
out2 <- paste(output,sep="",".fam")
out3 <- paste(output,sep="","_cov.txt")
out4 <- paste(output,sep="",".lgen")
out5 <- paste(output,sep="",".plink.csv")
#Generate PLINK map file by copying and renaming "SORCS2.adsp.map"
map <- read.table("SORCS2.adsp.map", header = F)
write.table(map, out1, sep='\t',quote=FALSE,row.names=F,col.names=F)
#Use dplyr bind_rows to generate combined fam, cov, and lgen files
fam.ydb <- read.table("SORCS2.Ydb.fam", header=F, stringsAsFactors = FALSE)
colnames(fam.ydb) <- c("FID","IID","PID","MID","SEX","AFF")
fam.ydb <- fam.ydb %>% mutate(IID=as.character(IID))
str(fam.ydb)
fam.adsp <- read.table("SORCS2.adsp.fam", header=F, stringsAsFactors = FALSE)
colnames(fam.adsp) <- c("FID","IID","PID","MID","SEX","AFF")
str(fam.adsp)
fam.comb <- bind_rows(fam.ydb,fam.adsp)
str(fam.comb)
write.table(fam.comb, out2, sep='\t',quote=FALSE,row.names=F,col.names=F)
cov.ydb <- read.table("SORCS2.Ydb_cov.txt", header=T, stringsAsFactors = FALSE)
#colnames(cov.ydb) <- c("FID","IID","PID","MID","SEX","AFF")
cov.ydb <- cov.ydb %>% mutate(IID=as.character(IID))
str(cov.ydb)
cov.adsp <- read.table("SORCS2.adsp_cov.txt", header=T, stringsAsFactors = FALSE)
#colnames(cov.adsp) <- c("FID","IID","PID","MID","SEX","AFF")
str(cov.adsp)
cov.comb <- bind_rows(cov.ydb,cov.adsp)
str(cov.comb)
x <- cov.comb %>% group_by(JS,RS,AUT,NCRAD,NW,ADSP) %>% summarise(n())
print(x)
cov.comb[is.na(cov.comb)]<-0
x <- cov.comb %>% group_by(JS,RS,AUT,NCRAD,NW,ADSP) %>% summarise(n())
print(x)
write.table(cov.comb, out3, sep='\t',quote=FALSE,row.names=F,col.names=T)
lgen.ydb <- read.table("SORCS2.Ydb.lgen", header=F, stringsAsFactors = FALSE)
colnames(lgen.ydb) <- c("FID","IID","rs","A1","A2")
lgen.ydb <- lgen.ydb %>% mutate(IID=as.character(IID))
str(lgen.ydb)
lgen.adsp <- read.table("SORCS2.adsp.lgen", header=F, stringsAsFactors = FALSE)
colnames(lgen.adsp) <- c("FID","IID","rs","A1","A2")
str(lgen.adsp)
lgen.comb <- bind_rows(lgen.ydb,lgen.adsp)
str(lgen.comb)
write.table(lgen.comb, out4, sep='\t',quote=FALSE,row.names=F,col.names=F)
assoc <- paste("plink",sep=" ","--lfile", output, "--assoc", "--ci 0.95", "--out", output)
logistic <- paste("plink",sep=" ","--lfile", output, "--logistic", "--covar", out3, "--covar-name RS,AUT,NCRAD,NW,SEX,Age,APOE4dose,APOE2dose", "--ci 0.95", "--out", output)
haplog <- paste("plink",sep=" ","--lfile", output, "--hap-window 4 --hap-logistic", "--covar", out3, "--covar-name RS,AUT,NCRAD,NW,ADSP,SEX,Age,APOE4dose,APOE2dose", "--ci 0.95", "--mhf 0.005 --out", output)
assocfile <- paste(output,sep="",".assoc")
logisfile <- paste(output,sep="",".assoc.logistic")
haplogfile <- paste(output,sep="",".assoc.hap.logistic")
system(assoc)
system(logistic)
system(haplog)
f1 <- read.table(assocfile, header=T)
#print(f1)
f1 <- f1 %>% select(CHR,SNP,BP,F_A, F_U, OR, P) %>% rename(FREQ_AD=F_A, FREQ_CON=F_U, OR_assoc=OR, P_assoc=P)
print(f1,digits=2,row.names=F)
print("", quote=F)
#head(f1)
f1 <- f1 %>% select(CHR,SNP,BP,FREQ_AD,FREQ_CON)
f2 <- read.table(logisfile, header=T)
#print(f2)
f2 <- f2 %>% filter (TEST=="ADD") %>% select (SNP,NMISS,OR,L95,U95,P) %>% rename(OR_logis=OR, P_logis=P)
#head(f2)
f3<- left_join(f1,f2,by="SNP")
print(f3,digits=2,row.names=F)
print("", quote=F)
write.table(f3,out5,sep=",", quote=FALSE,row.names=F,col.names=T)
f4 <- read.table(haplogfile, header=T)
f4 <- f4 %>% select(-NSNP,-NHAP,-STAT) %>% arrange(desc(HAPLOTYPE))
print(f4,digits=2, row.names=F)
print("", quote=F)
hapomni <- paste("plink",sep=" ","--lfile", output, "--hap-window 4 --hap-logistic", "--covar", out3, "--covar-name RS,AUT,NCRAD,NW,ADSP,SEX,Age,APOE4dose,APOE2dose", "--ci 0.95", "--mhf 0.005 --hap-omnibus --out", output)
system(hapomni)
f4 <- read.table(haplogfile, header=T)
f4 <- f4 %>% rename(Pomni=P)
print(f4,digits=2, row.names=F)
print("", quote=F)
library(data.table)
suppressWarnings(suppressMessages(library(dplyr)))
#Create output files
output <- "SORCS2.comb"
out1 <- paste(output,sep="",".map")
out2 <- paste(output,sep="",".fam")
out3 <- paste(output,sep="","_cov.txt")
out4 <- paste(output,sep="",".lgen")
out5 <- paste(output,sep="",".plink.csv")
#Generate PLINK map file by copying and renaming "SORCS2.adsp.map"
map <- read.table("SORCS2.adsp.map", header = F)
write.table(map, out1, sep='\t',quote=FALSE,row.names=F,col.names=F)
#Use dplyr bind_rows to generate combined fam, cov, and lgen files
fam.ydb <- read.table("SORCS2.Ydb.fam", header=F, stringsAsFactors = FALSE)
colnames(fam.ydb) <- c("FID","IID","PID","MID","SEX","AFF")
fam.ydb <- fam.ydb %>% mutate(IID=as.character(IID))
str(fam.ydb)
fam.adsp <- read.table("SORCS2.adsp.fam", header=F, stringsAsFactors = FALSE)
colnames(fam.adsp) <- c("FID","IID","PID","MID","SEX","AFF")
str(fam.adsp)
fam.comb <- bind_rows(fam.ydb,fam.adsp)
str(fam.comb)
write.table(fam.comb, out2, sep='\t',quote=FALSE,row.names=F,col.names=F)
cov.ydb <- read.table("SORCS2.Ydb_cov.txt", header=T, stringsAsFactors = FALSE)
#colnames(cov.ydb) <- c("FID","IID","PID","MID","SEX","AFF")
cov.ydb <- cov.ydb %>% mutate(IID=as.character(IID))
str(cov.ydb)
cov.adsp <- read.table("SORCS2.adsp_cov.txt", header=T, stringsAsFactors = FALSE)
#colnames(cov.adsp) <- c("FID","IID","PID","MID","SEX","AFF")
str(cov.adsp)
cov.comb <- bind_rows(cov.ydb,cov.adsp)
str(cov.comb)
x <- cov.comb %>% group_by(JS,RS,AUT,NCRAD,NW,ADSP) %>% summarise(n())
print(x)
cov.comb[is.na(cov.comb)]<-0
x <- cov.comb %>% group_by(JS,RS,AUT,NCRAD,NW,ADSP) %>% summarise(n())
print(x)
write.table(cov.comb, out3, sep='\t',quote=FALSE,row.names=F,col.names=T)
library(data.table)
suppressWarnings(suppressMessages(library(dplyr)))
#Create output files
output <- "SORCS2.comb"
out1 <- paste(output,sep="",".map")
out2 <- paste(output,sep="",".fam")
out3 <- paste(output,sep="","_cov.txt")
out4 <- paste(output,sep="",".lgen")
out5 <- paste(output,sep="",".plink.csv")
#Generate PLINK map file by copying and renaming "SORCS2.adsp.map"
map <- read.table("SORCS2.adsp.map", header = F)
write.table(map, out1, sep='\t',quote=FALSE,row.names=F,col.names=F)
#Use dplyr bind_rows to generate combined fam, cov, and lgen files
fam.ydb <- read.table("SORCS2.Ydb.fam", header=F, stringsAsFactors = FALSE)
colnames(fam.ydb) <- c("FID","IID","PID","MID","SEX","AFF")
fam.ydb <- fam.ydb %>% mutate(IID=as.character(IID))
str(fam.ydb)
fam.adsp <- read.table("SORCS2.adsp.fam", header=F, stringsAsFactors = FALSE)
colnames(fam.adsp) <- c("FID","IID","PID","MID","SEX","AFF")
str(fam.adsp)
fam.comb <- bind_rows(fam.ydb,fam.adsp)
str(fam.comb)
write.table(fam.comb, out2, sep='\t',quote=FALSE,row.names=F,col.names=F)
cov.ydb <- read.table("SORCS2.Ydb_cov.txt", header=T, stringsAsFactors = FALSE)
#colnames(cov.ydb) <- c("FID","IID","PID","MID","SEX","AFF")
cov.ydb <- cov.ydb %>% mutate(IID=as.character(IID))
str(cov.ydb)
cov.adsp <- read.table("SORCS2.adsp_cov.txt", header=T, stringsAsFactors = FALSE)
#colnames(cov.adsp) <- c("FID","IID","PID","MID","SEX","AFF")
str(cov.adsp)
cov.comb <- bind_rows(cov.ydb,cov.adsp)
str(cov.comb)
x <- cov.comb %>% group_by(JS,RS,AUT,NCRAD,NW,ADSP) %>% summarise(n())
print(x)
cov.comb[is.na(cov.comb)]<-0
x <- cov.comb %>% group_by(JS,RS,AUT,NCRAD,NW,ADSP) %>% summarise(n())
print(x)
write.table(cov.comb, out3, sep='\t',quote=FALSE,row.names=F,col.names=T)
library(data.table)
suppressWarnings(suppressMessages(library(dplyr)))
#Create output files
output <- "SORCS2.comb"
out1 <- paste(output,sep="",".map")
out2 <- paste(output,sep="",".fam")
out3 <- paste(output,sep="","_cov.txt")
out4 <- paste(output,sep="",".lgen")
out5 <- paste(output,sep="",".plink.csv")
#Generate PLINK map file by copying and renaming "SORCS2.adsp.map"
map <- read.table("SORCS2.adsp.map", header = F)
write.table(map, out1, sep='\t',quote=FALSE,row.names=F,col.names=F)
#Use dplyr bind_rows to generate combined fam, cov, and lgen files
fam.ydb <- read.table("SORCS2.Ydb.fam", header=F, stringsAsFactors = FALSE)
colnames(fam.ydb) <- c("FID","IID","PID","MID","SEX","AFF")
fam.ydb <- fam.ydb %>% mutate(IID=as.character(IID))
str(fam.ydb)
fam.adsp <- read.table("SORCS2.adsp.fam", header=F, stringsAsFactors = FALSE)
colnames(fam.adsp) <- c("FID","IID","PID","MID","SEX","AFF")
str(fam.adsp)
fam.comb <- bind_rows(fam.ydb,fam.adsp)
str(fam.comb)
write.table(fam.comb, out2, sep='\t',quote=FALSE,row.names=F,col.names=F)
cov.ydb <- read.table("SORCS2.Ydb_cov.txt", header=T, stringsAsFactors = FALSE)
#colnames(cov.ydb) <- c("FID","IID","PID","MID","SEX","AFF")
cov.ydb <- cov.ydb %>% mutate(IID=as.character(IID))
str(cov.ydb)
cov.adsp <- read.table("SORCS2.adsp_cov.txt", header=T, stringsAsFactors = FALSE)
#colnames(cov.adsp) <- c("FID","IID","PID","MID","SEX","AFF")
str(cov.adsp)
cov.comb <- bind_rows(cov.ydb,cov.adsp)
str(cov.comb)
x <- cov.comb %>% group_by(JS,RS,AUT,NCRAD,NW,ADSP) %>% summarise(n())
print(x)
cov.comb[is.na(cov.comb)]<-0
x <- cov.comb %>% group_by(JS,RS,AUT,NCRAD,NW,ADSP) %>% summarise(n())
print(x)
write.table(cov.comb, out3, sep='\t',quote=FALSE,row.names=F,col.names=T)
lgen.ydb <- read.table("SORCS2.Ydb.lgen", header=F, stringsAsFactors = FALSE)
colnames(lgen.ydb) <- c("FID","IID","rs","A1","A2")
lgen.ydb <- lgen.ydb %>% mutate(IID=as.character(IID))
str(lgen.ydb)
lgen.adsp <- read.table("SORCS2.adsp.lgen", header=F, stringsAsFactors = FALSE)
colnames(lgen.adsp) <- c("FID","IID","rs","A1","A2")
str(lgen.adsp)
lgen.comb <- bind_rows(lgen.ydb,lgen.adsp)
str(lgen.comb)
write.table(lgen.comb, out4, sep='\t',quote=FALSE,row.names=F,col.names=F)
assoc <- paste("plink",sep=" ","--lfile", output, "--assoc", "--ci 0.95", "--out", output)
logistic <- paste("plink",sep=" ","--lfile", output, "--logistic", "--covar", out3, "--covar-name RS,AUT,NCRAD,NW,SEX,Age,APOE4dose,APOE2dose", "--ci 0.95", "--out", output)
haplog <- paste("plink",sep=" ","--lfile", output, "--hap-window 4 --hap-logistic", "--covar", out3, "--covar-name RS,AUT,NCRAD,NW,ADSP,SEX,Age,APOE4dose,APOE2dose", "--ci 0.95", "--mhf 0.005 --out", output)
assocfile <- paste(output,sep="",".assoc")
logisfile <- paste(output,sep="",".assoc.logistic")
haplogfile <- paste(output,sep="",".assoc.hap.logistic")
system(assoc)
system(logistic)
system(haplog)
library(data.table)
suppressWarnings(suppressMessages(library(dplyr)))
#Create output files
output <- "SORCS2.comb"
out1 <- paste(output,sep="",".map")
out2 <- paste(output,sep="",".fam")
out3 <- paste(output,sep="","_cov.txt")
out4 <- paste(output,sep="",".lgen")
out5 <- paste(output,sep="",".plink.csv")
#Generate PLINK map file by copying and renaming "SORCS2.adsp.map"
map <- read.table("SORCS2.adsp.map", header = F)
write.table(map, out1, sep='\t',quote=FALSE,row.names=F,col.names=F)
#Use dplyr bind_rows to generate combined fam, cov, and lgen files
fam.ydb <- read.table("SORCS2.Ydb.fam", header=F, stringsAsFactors = FALSE)
colnames(fam.ydb) <- c("FID","IID","PID","MID","SEX","AFF")
fam.ydb <- fam.ydb %>% mutate(IID=as.character(IID))
str(fam.ydb)
fam.adsp <- read.table("SORCS2.adsp.fam", header=F, stringsAsFactors = FALSE)
colnames(fam.adsp) <- c("FID","IID","PID","MID","SEX","AFF")
str(fam.adsp)
fam.comb <- bind_rows(fam.ydb,fam.adsp)
str(fam.comb)
write.table(fam.comb, out2, sep='\t',quote=FALSE,row.names=F,col.names=F)
cov.ydb <- read.table("SORCS2.Ydb_cov.txt", header=T, stringsAsFactors = FALSE)
#colnames(cov.ydb) <- c("FID","IID","PID","MID","SEX","AFF")
cov.ydb <- cov.ydb %>% mutate(IID=as.character(IID))
str(cov.ydb)
cov.adsp <- read.table("SORCS2.adsp_cov.txt", header=T, stringsAsFactors = FALSE)
#colnames(cov.adsp) <- c("FID","IID","PID","MID","SEX","AFF")
str(cov.adsp)
cov.comb <- bind_rows(cov.ydb,cov.adsp)
str(cov.comb)
x <- cov.comb %>% group_by(JS,RS,AUT,NCRAD,NW,ADSP) %>% summarise(n())
print(x)
cov.comb[is.na(cov.comb)]<-0
x <- cov.comb %>% group_by(JS,RS,AUT,NCRAD,NW,ADSP) %>% summarise(n())
print(x)
write.table(cov.comb, out3, sep='\t',quote=FALSE,row.names=F,col.names=T)
lgen.ydb <- read.table("SORCS2.Ydb.lgen", header=F, stringsAsFactors = FALSE)
colnames(lgen.ydb) <- c("FID","IID","rs","A1","A2")
lgen.ydb <- lgen.ydb %>% mutate(IID=as.character(IID))
str(lgen.ydb)
lgen.adsp <- read.table("SORCS2.adsp.lgen", header=F, stringsAsFactors = FALSE)
colnames(lgen.adsp) <- c("FID","IID","rs","A1","A2")
str(lgen.adsp)
lgen.comb <- bind_rows(lgen.ydb,lgen.adsp)
str(lgen.comb)
write.table(lgen.comb, out4, sep='\t',quote=FALSE,row.names=F,col.names=F)
assoc <- paste("plink",sep=" ","--lfile", output, "--assoc", "--ci 0.95", "--out", output)
logistic <- paste("plink",sep=" ","--lfile", output, "--logistic", "--covar", out3, "--covar-name RS,AUT,NCRAD,NW,SEX,Age,APOE4dose,APOE2dose", "--ci 0.95", "--out", output)
haplog <- paste("plink",sep=" ","--lfile", output, "--hap-window 4 --hap-logistic", "--covar", out3, "--covar-name RS,AUT,NCRAD,NW,ADSP,SEX,Age,APOE4dose,APOE2dose", "--ci 0.95", "--mhf 0.005 --out", output)
assocfile <- paste(output,sep="",".assoc")
logisfile <- paste(output,sep="",".assoc.logistic")
haplogfile <- paste(output,sep="",".assoc.hap.logistic")
system(assoc)
system(logistic)
system(haplog)
f1 <- read.table(assocfile, header=T)
#print(f1)
f1 <- f1 %>% select(CHR,SNP,BP,F_A, F_U, OR, P) %>% rename(FREQ_AD=F_A, FREQ_CON=F_U, OR_assoc=OR, P_assoc=P)
print(f1,digits=2,row.names=F)
print("", quote=F)
#head(f1)
f1 <- f1 %>% select(CHR,SNP,BP,FREQ_AD,FREQ_CON)
f2 <- read.table(logisfile, header=T)
#print(f2)
f2 <- f2 %>% filter (TEST=="ADD") %>% select (SNP,NMISS,OR,L95,U95,P) %>% rename(OR_logis=OR, P_logis=P)
#head(f2)
f3<- left_join(f1,f2,by="SNP")
print(f3,digits=2,row.names=F)
print("", quote=F)
write.table(f3,out5,sep=",", quote=FALSE,row.names=F,col.names=T)
f4 <- read.table(haplogfile, header=T)
f4 <- f4 %>% select(-NSNP,-NHAP,-STAT) %>% arrange(desc(HAPLOTYPE))
print(f4,digits=2, row.names=F)
print("", quote=F)
library(data.table)
suppressWarnings(suppressMessages(library(dplyr)))
#Create output files
output <- "SORCS2.comb"
out1 <- paste(output,sep="",".map")
out2 <- paste(output,sep="",".fam")
out3 <- paste(output,sep="","_cov.txt")
out4 <- paste(output,sep="",".lgen")
out5 <- paste(output,sep="",".plink.csv")
#Generate PLINK map file by copying and renaming "SORCS2.adsp.map"
map <- read.table("SORCS2.adsp.map", header = F)
write.table(map, out1, sep='\t',quote=FALSE,row.names=F,col.names=F)
#Use dplyr bind_rows to generate combined fam, cov, and lgen files
fam.ydb <- read.table("SORCS2.Ydb.fam", header=F, stringsAsFactors = FALSE)
colnames(fam.ydb) <- c("FID","IID","PID","MID","SEX","AFF")
fam.ydb <- fam.ydb %>% mutate(IID=as.character(IID))
str(fam.ydb)
fam.adsp <- read.table("SORCS2.adsp.fam", header=F, stringsAsFactors = FALSE)
colnames(fam.adsp) <- c("FID","IID","PID","MID","SEX","AFF")
str(fam.adsp)
fam.comb <- bind_rows(fam.ydb,fam.adsp)
str(fam.comb)
write.table(fam.comb, out2, sep='\t',quote=FALSE,row.names=F,col.names=F)
cov.ydb <- read.table("SORCS2.Ydb_cov.txt", header=T, stringsAsFactors = FALSE)
#colnames(cov.ydb) <- c("FID","IID","PID","MID","SEX","AFF")
cov.ydb <- cov.ydb %>% mutate(IID=as.character(IID))
str(cov.ydb)
cov.adsp <- read.table("SORCS2.adsp_cov.txt", header=T, stringsAsFactors = FALSE)
#colnames(cov.adsp) <- c("FID","IID","PID","MID","SEX","AFF")
str(cov.adsp)
cov.comb <- bind_rows(cov.ydb,cov.adsp)
str(cov.comb)
x <- cov.comb %>% group_by(JS,RS,AUT,NCRAD,NW,ADSP) %>% summarise(n())
print(x)
cov.comb[is.na(cov.comb)]<-0
x <- cov.comb %>% group_by(JS,RS,AUT,NCRAD,NW,ADSP) %>% summarise(n())
print(x)
write.table(cov.comb, out3, sep='\t',quote=FALSE,row.names=F,col.names=T)
lgen.ydb <- read.table("SORCS2.Ydb.lgen", header=F, stringsAsFactors = FALSE)
colnames(lgen.ydb) <- c("FID","IID","rs","A1","A2")
lgen.ydb <- lgen.ydb %>% mutate(IID=as.character(IID))
str(lgen.ydb)
lgen.adsp <- read.table("SORCS2.adsp.lgen", header=F, stringsAsFactors = FALSE)
colnames(lgen.adsp) <- c("FID","IID","rs","A1","A2")
str(lgen.adsp)
lgen.comb <- bind_rows(lgen.ydb,lgen.adsp)
str(lgen.comb)
write.table(lgen.comb, out4, sep='\t',quote=FALSE,row.names=F,col.names=F)
assoc <- paste("plink",sep=" ","--lfile", output, "--assoc", "--ci 0.95", "--out", output)
logistic <- paste("plink",sep=" ","--lfile", output, "--logistic", "--covar", out3, "--covar-name RS,AUT,NCRAD,NW,SEX,Age,APOE4dose,APOE2dose", "--ci 0.95", "--out", output)
haplog <- paste("plink",sep=" ","--lfile", output, "--hap-window 4 --hap-logistic", "--covar", out3, "--covar-name RS,AUT,NCRAD,NW,ADSP,SEX,Age,APOE4dose,APOE2dose", "--ci 0.95", "--mhf 0.005 --out", output)
assocfile <- paste(output,sep="",".assoc")
logisfile <- paste(output,sep="",".assoc.logistic")
haplogfile <- paste(output,sep="",".assoc.hap.logistic")
system(assoc)
system(logistic)
system(haplog)
f1 <- read.table(assocfile, header=T)
#print(f1)
f1 <- f1 %>% select(CHR,SNP,BP,F_A, F_U, OR, P) %>% rename(FREQ_AD=F_A, FREQ_CON=F_U, OR_assoc=OR, P_assoc=P)
print(f1,digits=2,row.names=F)
print("", quote=F)
#head(f1)
f1 <- f1 %>% select(CHR,SNP,BP,FREQ_AD,FREQ_CON)
f2 <- read.table(logisfile, header=T)
#print(f2)
f2 <- f2 %>% filter (TEST=="ADD") %>% select (SNP,NMISS,OR,L95,U95,P) %>% rename(OR_logis=OR, P_logis=P)
#head(f2)
f3<- left_join(f1,f2,by="SNP")
print(f3,digits=2,row.names=F)
print("", quote=F)
write.table(f3,out5,sep=",", quote=FALSE,row.names=F,col.names=T)
f4 <- read.table(haplogfile, header=T)
f4 <- f4 %>% select(-NSNP,-NHAP,-STAT) %>% arrange(desc(HAPLOTYPE))
print(f4,digits=2, row.names=F)
print("", quote=F)
hapomni <- paste("plink",sep=" ","--lfile", output, "--hap-window 4 --hap-logistic", "--covar", out3, "--covar-name RS,AUT,NCRAD,NW,ADSP,SEX,Age,APOE4dose,APOE2dose", "--ci 0.95", "--mhf 0.005 --hap-omnibus --out", output)
system(hapomni)
f4 <- read.table(haplogfile, header=T)
f4 <- f4 %>% rename(Pomni=P)
print(f4,digits=2, row.names=F)
print("", quote=F)
